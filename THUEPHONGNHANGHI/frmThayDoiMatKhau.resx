<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCapNhat.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnDong.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACB0RVh0VGl0
        bGUAU2F2ZSBBbmQgQ2xvc2U7U2F2ZTtDbG9zZTsqhAh7AAAJD0lEQVRYR8WXCVBU9x3HN22TJjFpatr0
        mslhkuaaVES5ZQkicogCCyz3GcQL2OW+YbnCGUVAUxM1UQlRlIQYo2hEJ3aaRKIxGhHFAwxRRNgFhN0F
        j+mn83+LDoOatDM93sxn5+3bt+/z/f3f+x9PBsj+n9xx4H+N6ePf3MR/LpUWyi6WFYmvP5PJZD+XyWS/
        +Be4fxxx/n13C3DfOOKi92T8P2L//vOFms+/Ly7gQpEgn64ijYlCDV0FeXRK5NKZn0unJpfzmhxO52Qd
        FIEmBxBikfIBmUz2y0k8eA8eFRc2frPXxJFxpP094zRjPCzYjbF1l8TprAwhfWBiAEmuKnq3KKms7mZS
        aR2JpXW4KOKxdgjBNzSDytUNVNRupaz6A0qq6ilaUUde2QbOZGdi/HoXA1tq+S4zgXXPTmefr5/0XdCi
        VLJu2nSOp6vRvV+Nrm4VbakpQvrg5AAPJJZuvvlRy1GaDnzLJ58fl+RO7kpCY/LpGrxJ18ANOgeu06m7
        znntNdovXaU9PRXDlzs4nq5ik2sALbuPsHVpFs0LPNnj6SXtt+w6zCaXAI6lxqLdtJJjqgQhfWhiAHE/
        H1QXb6Rx31FWbtpL+frdWMtDmOPmR/CiPDqFXIh11zivHeNs3xht3YMcWx6L/uCHrHvqFTrPXKJ/wMiZ
        Lh0NqgKJ0106Lmv1nOu4xLonX6H/3Upao2OE9OE7AsQXbGD7niMUrG6ibN2nWMmDcHT1xT8y63bV5/pN
        8jNXRjnepeVvC7wZ2FJDi9Kfr8ur0BtvoL06Ssf3Ojou6OgbGmXYcF36rcXXj+6M19k7111Ip0wO8FCs
        5h22NLeSX9NI2TufYGkfxGuuPviGpXHutnyUM71GOi4bOHa+nxbn+fRWZfBDeiT7PDz4qryaK4OjXBkw
        0jtopFc3yhelq/jM3Z0udRBngubyqZ2TkD5yR4BlOWt5f+eX5FZvo+StHVjYB+Lg4oNXUPLtqjt6jZy+
        bOBUj57Dp3rYLZ/HpSIV58LdaJ5ty15NBZe1Rnq0Bi7167nUb2RPbjm7ba3p8HPklEJO0yx7IX10coCH
        l2SuYVPT38lasYXi1R9hYReAg7OCBUo1Hb2jnO41cqrHQFv3MN+e1XLwm052WDnSnRVDs6U5Hybkc+Js
        Pxf79OiGR9FdHaP7ip7jZ/poVGvYbT6dk+6WNLxqLaS/mhhAjExTotOq2dB4kMyKegprG5k12x/7uV64
        KZZz8qKeY52DHO7oo7W9l0NtvRxoPcd2M1upaeuffRHtZS0X+w0MDI9xvHq1hCnECP09WuqnvchxJzPq
        XpglpI/dESAqeSVvN+wnrWwzhTUNzLL1x97JE+eFi2k9eYXWk70cErT18FVbLy2HOqh/2ZKzr3tyxMuZ
        /WGRjOl0HC2vpMXehn32NtK+OLY/LIJWVzlH7V7m3af/IqRTJwd4JFxdwVsffEZy8XvkV23FVRGHua0S
        e+dwHN2ieM0tEgfXCOQu4cjnhWHjGMjGaeac8p/LSQ9rDnu8xvYXX+KAvRXtXg6c9JRzwM5SOtY6bzbH
        5phxZOZzvP2nl4X08TsChMaVUbupmYSC9WSW15FdWU92xftklm8ms3Qj6aUbSSt+j5SiDSQVrmd5Ri1F
        z1txYr4NR61f4DunGXT4OdHmYsUR6+c5YvE8J5wtaPe056jdK7SaPUPrq0+x5ok/3zXAo4FLilmxfifx
        eW8Tn7uWuJy/EivIWsPSzDUsy1jNkvRaFqfVEJNSTaSqHLWZE5ppM9E8MwvNMzPJe1pgbuIpc3KfNCdH
        YgY1U5+jeupzlD427YvJ3VAK4B+dT8Xaj4nNfovlWSbhUklaw+LUGmJSq4lJXkV0chXRSSsIWVaEd3Aq
        CwMSWOifwAJ/tdRjFihVePipmO+nwt1PhTI8HSu5nxC9IJPJ/ihcwjk5wK98InIoqd3O0vTacWk1Mamr
        iJGEK4lOXEFU4ptEJVQSoapAGZElTVSK0Ax8QjJQSKTjHZyGlyAoDc+gVAKjNdg5hQjRb8bXA5J3YgAx
        DT/mGZpJYdVWYlJWsSi5ikh1BeGqMsLjygiLLSF0+RuELHuD4KVFBMRo8I3IxCc8A0VYBt6h6XiHmMRC
        6hmcimdgCgsDUvGPysXGMfinAywISiW3so7XpSrfJDS2hNHrNzCOmTCM3UA/ep2R0RuMGK8xbLjGVYH+
        GkP6MQbF4CMNQKP0D43i4Z+Eh38yfhHZWDkECdFvxwNIq6HJAX7trkwks+Q9IuIrCI8vJ2hJkSQWk4kQ
        CcnQyBiDI2PSYCNE2iGBkf4hI32DBtMcMKDnss6Au68aD2USPmGZWMoDheiJHw3golCRUrjO1NzLSghY
        pJGqvl2lEEuYqhSznpD3DRq5Ihgw0CvQ6enR6nHxjmO+b6L0TFjYB/xkgKlOnstJzFlL8JJigmKK8I3M
        kZp8SH+NwRHBeOW3m9kkN1UuxAZ6tQZ6RIB+PXMXLsPNJwHPwFRm2SmF6HfjS767Bnjccf5i4jJqCIgu
        QHRJ79AM6V4PCfkEsfaqqckFEyu/LMTj1YsAc+YvwVWhZqF/CjNtpW74+3sFEM3yuNw1mqUpVfhF5eEb
        mYtnUArDxutSs+uGx9AOm+65JJcqH5frhNwgrXyEWJqG+0ZwcI3GxVuFhzIRcxvfnw4w2zmSRepKfMKz
        UYRlM1+ZwKoDXWh2dpC74zTZO06R2XSKtA/bSW1sJ2lbOwlbT6L6oI3Y+jaW1Z1gyeYTLN50gthtndg7
        RzHPS4W7bxJm1j4/GkB6CG3mhN2MXF6KV0gGXsEZuPjEs/qLXt5ouUjRZxcp2PsDec3d5OzqJvPT70n/
        5AKpH18gqamLhMZO1I2dxG07T2zDOQk7p3CcveJw81ZjZqW48WPdUCxIpsyw9am0lAfdtJAHYSEPxGZO
        KNE1h/Ar/hxFwX4W5u7DI2svbunNOKfsYk7iTuTxH2MX24T10kYsY7YzK7qBGZFbTFj7MN1KwXRL73+8
        ZOZSLkbbiW9FEwOIZblINkX0hvHuIhBP7WREM07mD3dBjPkCsS+uJeRS899tJLz1SnbrHU+EESf/p7j9
        PnivALe2Wyf8t7i93QrwT+ddlw9Fsq85AAAAAElFTkSuQmCC
</value>
  </data>
</root>